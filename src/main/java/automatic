    @Override
    public void automatic() {
        edificioAM = missao.getEdificio();
        salasGrafoAM = edificioAM.getSalas();
        LinearLinkedUnorderedList<Sala> EntradasSaidas = edificioAM.getEntradas_saidas();
        Iterator<Sala> CaminhoTemp;
        Sala salaAlvo = edificioAM.getSalaAlvo();
        salaToCruzAM = EntradasSaidas.first();
        Iterator<Sala> caminho ;
        double tempWeight1;
        double tempWeight2;

        //SetUp Do spawnPoint
        System.out.println("SetUp do SpawnPoint");
         if (EntradasSaidas.size() > 1) {
            for (Sala EntExit : EntradasSaidas){
                 currentWeigthAM =  salasGrafoAM.shortestWeightWeight(EntExit, salaAlvo);
                if (salasGrafoAM.shortestWeightWeight(salaToCruzAM, edificioAM.getSalaAlvo()) > currentWeigthAM){
                    salaToCruzAM = EntExit;
                }
            }

        }
        System.out.println("SpawnPoint: " + salaToCruzAM.getNome());

         currentWeigthAM = salasGrafoAM.shortestWeightWeight(salaToCruzAM, edificioAM.getSalaAlvo());
        missao.changeSala(salaToCruzAM, salaToCruzAM.setHaveToCruz(true));
        AtualizeAM();
        caminho = salasGrafoAM.iteratorShortestWeight(salaToCruzAM, salaAlvo);

        //---------------------------------------------------------------------
        //Inicio do jogo
        System.out.println("Comecou!");
        while ( !end) {
            while ( toCruz.getVida() > 0 && caminho.hasNext()) {
                try {
                    Sala proximaSala;

                    //caso tenha mais que 40% da vida maxima
                    if (toCruz.getVida() > toCruz.getMaxLife() * 0.40) {
                        //continuação do caminho caso ele não tenha o alvo
                        if (!toCruz.getGotAlvo()) {
                            CaminhoTemp = getCaminhoAM(salaToCruzAM, salaAlvo, salasGrafoAM);
                            if (CaminhoTemp != null) {
                                caminho = CaminhoTemp;
                            }
                        }
                        //------------------------------
                        //continuação do caminho caso ele tenha o alvo
                        else {
                            CaminhoTemp = getCaminhoAM(salaToCruzAM, saida, salasGrafoAM);
                            if (CaminhoTemp != null) {
                                caminho = CaminhoTemp;
                            }
                        }
                        //---------------------------------
                        caminho.next();
                        proximaSala = caminho.next();
                        System.out.println("To andou para: " + proximaSala.getNome());
                        Rounds.moveToCruz(missao, proximaSala, true);
                        AtualizeAM();
                    }
                    //---------------------------------------------
                    //caso tenha 40% ou menos da vida maxima, e tenha a mochila vazia, vai buscar o medkit dependendo se tem o alvo ou não, caso tenha, anda na direção do que estiver mais proximo(saida ou medKit)
                    else if ((toCruz.getVida() <= toCruz.getMaxLife() * 0.40 && toCruz.getMochila().isEmpty())) {
                        caminhoMedKit = edificioAM.getCaminhoMedkit(true);
                        caminhoMedKit.next();
                        proximaSala = caminhoMedKit.next();
                        tempWeight1 = salasGrafoAM.shortestWeightWeight(edificioAM.getSalaToCruz(), salaMedKitAM);
                        //caso não tenha o alvo nem medKit e tenha a vida a baixo dos40% decide ir para o que esta mais proximo
                        if (!toCruz.getGotAlvo()) {
                            tempWeight2 = salasGrafoAM.shortestWeightWeight(edificioAM.getSalaToCruz(), salaAlvo);

                            if (tempWeight1 < tempWeight2) {

                                CaminhoTemp = getCaminhoAM(edificioAM.getSalaToCruz(), salaMedKitAM, salasGrafoAM);
                                if (CaminhoTemp != null) {
                                    caminho = CaminhoTemp;
                                }
                                System.out.println("To andou para: " + proximaSala.getNome());
                                Rounds.moveToCruz(missao, proximaSala, true);
                                AtualizeAM();
                            } else {

                                CaminhoTemp = getCaminhoAM(edificioAM.getSalaToCruz(), salaAlvo, salasGrafoAM);
                                if (CaminhoTemp != null) {
                                    caminho = CaminhoTemp;
                                }
                                caminho.next();
                                Sala tempSala =  caminho.next();
                                System.out.println("To andou para: " + tempSala.getNome());
                                Rounds.moveToCruz(missao, tempSala, true);
                                AtualizeAM();
                            }
                        }
                        //------------------------------------
                        //caso não tenha medKit mas tem o alvo e tem a vida a baixo dos40% decide ir para o que esta mais proximo (saida ou medkit)
                        if (toCruz.getGotAlvo()) {
                            tempWeight2 = salasGrafoAM.shortestWeightWeight(edificioAM.getSalaToCruz(), edificioAM.getClosestExit(true));

                            if (tempWeight1 < tempWeight2) {

                                CaminhoTemp = getCaminhoAM(edificioAM.getSalaToCruz(), salaMedKitAM, salasGrafoAM);
                                if (CaminhoTemp != null) {
                                    caminho = CaminhoTemp;
                                }
                                System.out.println("To andou para: " + proximaSala.getNome());
                                Rounds.moveToCruz(missao, proximaSala, true);
                                AtualizeAM();
                            } else {
                                CaminhoTemp = getCaminhoAM(edificioAM.getSalaToCruz(), saida, salasGrafoAM);
                                if (CaminhoTemp != null) {
                                    caminho = CaminhoTemp;
                                }
                                caminho.next();
                                proximaSala = caminho.next();
                                System.out.println("To andou para: " + proximaSala.getNome());
                                Rounds.moveToCruz(missao, proximaSala, true);
                                AtualizeAM();
                            }
                        }
                        //----------------------------------------

//                        double newWeight = salasGrafoAM.shortestWeightWeight(edificioAM.getSalaToCruz(), edificioAM.getSalaAlvo());
//
//                        if (currentWeigthAM > newWeight) {
//                            caminho = salasGrafoAM.iteratorShortestWeight(edificioAM.getSalaToCruz(), edificioAM.getSalaAlvo());
//                            currentWeigthAM = newWeight;
//                        }
                    }
                    //---------------------------------------------
                    //caso tenha 40% ou menos da vida maxima, não tenha o alvo e tenha um medkit, vai usar
                    else if ((toCruz.getVida() <= toCruz.getMaxLife() * 0.40 && !toCruz.getMochila().isEmpty())) {
                        Rounds.useMedkit(missao, true, false);
                        AtualizeAM();
                    }
                    if (missao.getToCruz().getVida() <= 0) {
                        end = true;
                        break;
                    }
                } catch (IllegalArgumentException e){
                    System.out.println(e.getMessage());
                }

                if (salaToCruzAM.equals(edificioAM.getSalaAlvo())){
                    CaminhoTemp = getCaminhoAM(salaToCruzAM, saida, salasGrafoAM);
                    if (CaminhoTemp != null) {
                        caminho = CaminhoTemp;
                    }
                }
               else  if (salaToCruzAM.equals(salaMedKitAM) && !toCruz.getGotAlvo()) {
                    CaminhoTemp = getCaminhoAM(salaToCruzAM, salaAlvo, salasGrafoAM);
                    if (CaminhoTemp != null) {
                        caminho = CaminhoTemp;
                    }
                } else if (salaToCruzAM.equals(salaMedKitAM) && toCruz.getGotAlvo()){
                    CaminhoTemp = getCaminhoAM(salaToCruzAM, saida, salasGrafoAM);
                    if (CaminhoTemp != null) {
                        caminho = CaminhoTemp;
                    }
                } else if (toCruz.getGotAlvo() && salaToCruzAM.isEntradaSaida()){
                    missao.setSucess(true);
                    end = true;
                    break;
                }

            }

        }
        //todas as decisões são tomadas automaticamente
        //iterator the shortestpath
    }